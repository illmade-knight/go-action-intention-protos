// Defines the structure of the SecureEnvelope used for end-to-end
// encrypted messaging.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: proto/secure-envelope.proto

package envelope_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the secure data packet sent between users via the routing service.
type SecureEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The URN of the message sender (e.g., "urn:sm:user:user-a@example.com").
	SenderId string `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// The URN of the message recipient.
	RecipientId string `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	// A unique identifier for the message.
	MessageId string `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// The AES-encrypted payload.
	EncryptedData []byte `protobuf:"bytes,4,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	// The RSA-encrypted AES symmetric key.
	EncryptedSymmetricKey []byte `protobuf:"bytes,5,opt,name=encrypted_symmetric_key,json=encryptedSymmetricKey,proto3" json:"encrypted_symmetric_key,omitempty"`
	// The signature of the EncryptedData.
	Signature     []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecureEnvelope) Reset() {
	*x = SecureEnvelope{}
	mi := &file_proto_secure_envelope_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecureEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureEnvelope) ProtoMessage() {}

func (x *SecureEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_secure_envelope_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureEnvelope.ProtoReflect.Descriptor instead.
func (*SecureEnvelope) Descriptor() ([]byte, []int) {
	return file_proto_secure_envelope_proto_rawDescGZIP(), []int{0}
}

func (x *SecureEnvelope) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SecureEnvelope) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *SecureEnvelope) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SecureEnvelope) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

func (x *SecureEnvelope) GetEncryptedSymmetricKey() []byte {
	if x != nil {
		return x.EncryptedSymmetricKey
	}
	return nil
}

func (x *SecureEnvelope) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_proto_secure_envelope_proto protoreflect.FileDescriptor

const file_proto_secure_envelope_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/secure-envelope.proto\x12\x1caction_intention.envelope.v1\"\xec\x01\n" +
	"\x0eSecureEnvelope\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12!\n" +
	"\frecipient_id\x18\x02 \x01(\tR\vrecipientId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\x12%\n" +
	"\x0eencrypted_data\x18\x04 \x01(\fR\rencryptedData\x126\n" +
	"\x17encrypted_symmetric_key\x18\x05 \x01(\fR\x15encryptedSymmetricKey\x12\x1c\n" +
	"\tsignature\x18\x06 \x01(\fR\tsignatureBUZSgithub.com/illmade-knight/go-action-intention-protos/gen/go/envelope/v1;envelope_v1b\x06proto3"

var (
	file_proto_secure_envelope_proto_rawDescOnce sync.Once
	file_proto_secure_envelope_proto_rawDescData []byte
)

func file_proto_secure_envelope_proto_rawDescGZIP() []byte {
	file_proto_secure_envelope_proto_rawDescOnce.Do(func() {
		file_proto_secure_envelope_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_secure_envelope_proto_rawDesc), len(file_proto_secure_envelope_proto_rawDesc)))
	})
	return file_proto_secure_envelope_proto_rawDescData
}

var file_proto_secure_envelope_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_secure_envelope_proto_goTypes = []any{
	(*SecureEnvelope)(nil), // 0: action_intention.envelope.v1.SecureEnvelope
}
var file_proto_secure_envelope_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_secure_envelope_proto_init() }
func file_proto_secure_envelope_proto_init() {
	if File_proto_secure_envelope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_secure_envelope_proto_rawDesc), len(file_proto_secure_envelope_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_secure_envelope_proto_goTypes,
		DependencyIndexes: file_proto_secure_envelope_proto_depIdxs,
		MessageInfos:      file_proto_secure_envelope_proto_msgTypes,
	}.Build()
	File_proto_secure_envelope_proto = out.File
	file_proto_secure_envelope_proto_goTypes = nil
	file_proto_secure_envelope_proto_depIdxs = nil
}
